[tool.poetry]
name = "Ajax"
version = "0.3.1"
description = "Agents in JAX: Jax based implementations of RL algorithms"
authors = ["Yann Berthelot <yannberthelot1@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11"
gymnasium = "^1.2.0"
tqdm = "^4.65.0"
pandas = "^2.1.1"
matplotlib = "^3.8.0"
jax = [
  { version = ">=0.6.2", markers = "sys_platform == 'darwin' and (platform_machine == 'arm64' or platform_machine == 'aarch64')" },
  { version = ">=0.6.2", extras  = ["cuda"], markers = "sys_platform != 'darwin' or (platform_machine != 'arm64' and platform_machine != 'aarch64')" },
]
flax = "^0.10.7"
flashbax = "^0.1.3"
brax = {git = "https://github.com/YannBerthelot/brax.git", rev = "get_obs_fast_env"}
mujoco = "^3.1.4"
mujoco-mjx = "^3.1.4"
python-dotenv = "^1.1.1"
gymnax = {git = "https://github.com/YannBerthelot/gymnax.git", rev = "terminal_state_tracking"}
target-gym = "^0.3.1"
distrax = ">=0.1.6"
tensorboardx = "^2.6.4"



[tool.poetry.group.dev.dependencies]
black = "23.3.0"
mypy = "^1.4.1"
pre-commit = "^3.3.3"
pytest = "7.4.0"
tox = "^4.6.4"
coverage = {extras = ["toml"], version = "^7.8.0"}
pytest-mock = "^3.14.0"
mock = "^5.1.0"
ruff = "^0.11.6"


[tool.poetry.group.render.dependencies]
imageio = {extras = ["ffmpeg"], version = "^2.37.0"}

[tool.poetry.group.wandb.dependencies]
wandb = "^0.19.9"



[tool.poetry.group.profiling.dependencies]
objgraph = "^3.6.2"
memory-profiler = "^0.61.0"




[tool.poetry.group.hyperparameters.dependencies]
optuna = "^4.5.0"


[[tool.poetry.source]]
name = "pypi"
priority = "primary"


[[tool.poetry.source]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
priority = "supplemental"

[tool.black]
line-length = 88
preview = true
verbose = false

[tool.ruff]
line-length = 88
fix = true
src = ["src", "tests"]

[tool.ruff.lint]
select =  ["I", "F", "E", "W", "B", "C", "RUF"]
ignore = ["E501"]
fixable = ["ALL"]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
docstring-code-format = true
quote-style = "double"
indent-style = "space"

[tool.ruff.lint.per-file-ignores]
# ClassVar, implicit optional check not needed for tests
"./tests/*.py" = ["RUF012", "RUF013"]

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 15


[tool.mypy]
ignore_missing_imports = true
follow_imports = "silent"
show_error_codes = true
disable_error_code = ["attr-defined" ,"call-arg","misc"]
exclude = """(?x)(
    tests/test_logger.py$
    | tests/test_train_eval_mode.py$
  )"""



[tool.pytest.ini_options]
norecursedirs = ["tests/classical/*", "tests/recurrent/*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.coverage.run]
branch = true


[tool.coverage.report]
omit = [ "tests/*"]
ignore_errors = true    
fail_under = 70

exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    ]

[build-system]
requires = ["poetry-core","poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend =  "poetry_dynamic_versioning.backend"
